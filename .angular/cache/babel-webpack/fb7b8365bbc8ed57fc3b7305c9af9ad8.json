{"ast":null,"code":"import { URL_SERVICIOS } from '../../config/config';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../usuario/usuario.service\";\nexport let MedicoService = /*#__PURE__*/(() => {\n  class MedicoService {\n    constructor(http, _usuarioService) {\n      this.http = http;\n      this._usuarioService = _usuarioService;\n      this.totalMedico = 0;\n    }\n\n    cargarMedicos() {\n      let url = URL_SERVICIOS + '/medico';\n      return this.http.get(url).pipe(map(resp => {\n        this.totalMedico = resp.total;\n        return resp.medicos;\n      }));\n    }\n\n    totalMedicos() {\n      let url = URL_SERVICIOS + '/medico';\n      return this.http.get(url).pipe(map(resp => resp.total));\n    }\n\n    cargarMedico(id) {\n      let url = URL_SERVICIOS + '/medico/' + id;\n      return this.http.get(url).pipe(map(resp => resp.Medico));\n    }\n\n    buscarMedico(termino) {\n      const url = URL_SERVICIOS + '/busqueda/coleccion/medicos/' + termino;\n      return this.http.get(url).pipe(map(resp => resp.medicos));\n    }\n\n    borrarMedico(id) {\n      let url = URL_SERVICIOS + '/medico/' + id + '?token=' + this._usuarioService.token;\n      return this.http.delete(url).pipe(map(resp => {\n        Swal.fire('Médico Borrado', 'Médico borrado correctamente', 'success');\n        return resp;\n      }));\n    }\n\n    guardarMedico(medico) {\n      let url = URL_SERVICIOS + '/medico';\n\n      if (medico._id) {\n        // actualizando\n        url += '/' + medico._id;\n        url += '?token=' + this._usuarioService.token;\n        return this.http.put(url, medico).pipe(map(resp => {\n          Swal.fire('Médico Actualizado', medico.nombre, 'success');\n          return resp.Medico;\n        }));\n      } else {\n        // Creando\n        url += '?token=' + this._usuarioService.token;\n        return this.http.post(url, medico).pipe(map(resp => {\n          Swal.fire('Médico Creado', medico.nombre, 'success');\n          return resp.medico;\n        }));\n      }\n    }\n\n  }\n\n  MedicoService.ɵfac = function MedicoService_Factory(t) {\n    return new (t || MedicoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UsuarioService));\n  };\n\n  MedicoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MedicoService,\n    factory: MedicoService.ɵfac,\n    providedIn: 'root'\n  });\n  return MedicoService;\n})();","map":null,"metadata":{},"sourceType":"module"}