{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../usuario/usuario.service\";\nimport * as i2 from \"@angular/router\";\nexport let VerificaTokenGuard = /*#__PURE__*/(() => {\n  class VerificaTokenGuard {\n    constructor(_usuarioService, router) {\n      this._usuarioService = _usuarioService;\n      this.router = router;\n    }\n\n    canActivate() {\n      const token = this._usuarioService.token;\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const expirado = this.expirado(payload.exp);\n\n      if (expirado) {\n        this.router.navigate(['/login']);\n        return false;\n      }\n\n      return this.verificaRenueva(payload.exp);\n    }\n\n    verificaRenueva(fechaExp) {\n      return new Promise((resolve, reject) => {\n        const tokenExp = new Date(fechaExp * 1000);\n        const ahora = new Date();\n        ahora.setTime(ahora.getTime() + 4 * 60 * 60 * 1000); // console.log(tokenExp);\n        // console.log(ahora);\n\n        if (tokenExp.getTime() > ahora.getTime()) {\n          resolve(true);\n        } else {\n          this._usuarioService.renuevaToken().subscribe(() => {\n            resolve(true);\n          }, () => {\n            this.router.navigate(['/login']);\n            reject(false);\n          });\n        }\n      });\n    }\n\n    expirado(fechaExp) {\n      const ahora = new Date().getTime() / 1000;\n\n      if (fechaExp < ahora) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  VerificaTokenGuard.ɵfac = function VerificaTokenGuard_Factory(t) {\n    return new (t || VerificaTokenGuard)(i0.ɵɵinject(i1.UsuarioService), i0.ɵɵinject(i2.Router));\n  };\n\n  VerificaTokenGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VerificaTokenGuard,\n    factory: VerificaTokenGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return VerificaTokenGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}