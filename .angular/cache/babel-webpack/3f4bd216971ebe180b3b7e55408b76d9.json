{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"txtProgress\"];\nexport let IncrementadorComponent = /*#__PURE__*/(() => {\n  class IncrementadorComponent {\n    constructor() {\n      this.leyenda = 'Leyenda';\n      this.progreso = 50;\n      this.cambioValor = new EventEmitter(); // console.log('Leyenda', this.leyenda);\n      // console.log('progreso', this.progreso);\n    }\n\n    ngOnInit() {//  console.log('Leyenda', this.leyenda);\n      // console.log('progreso', this.progreso);\n    }\n\n    onChange(newValue) {\n      // let elemHTML: any = document.getElementsByName('progreso')[0];\n      // console.log(ElementRef);\n      if (newValue >= 100) {\n        this.progreso = 100;\n      } else if (newValue < 0) {\n        this.progreso = 0;\n      } else {\n        this.progreso = newValue;\n      } // elemHTML.value = Number( this.progreso );\n\n\n      this.txtProgress.nativeElement.value = this.progreso;\n      this.cambioValor.emit(this.progreso);\n      this.txtProgress.nativeElement.focus();\n    }\n\n    cambiarValor(valor) {\n      if (this.progreso >= 100 && valor > 0) {\n        this.progreso = 100;\n        return;\n      }\n\n      if (this.progreso <= 0 && valor < 0) {\n        this.progreso = 0;\n        return;\n      }\n\n      this.progreso += valor;\n      this.cambioValor.emit(this.progreso);\n    }\n\n  }\n\n  IncrementadorComponent.ɵfac = function IncrementadorComponent_Factory(t) {\n    return new (t || IncrementadorComponent)();\n  };\n\n  IncrementadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncrementadorComponent,\n    selectors: [[\"app-incrementador\"]],\n    viewQuery: function IncrementadorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.txtProgress = _t.first);\n      }\n    },\n    inputs: {\n      leyenda: [\"nombre\", \"leyenda\"],\n      progreso: \"progreso\"\n    },\n    outputs: {\n      cambioValor: \"actualizaValor\"\n    },\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"input-group\"], [1, \"input-group-btn\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"mdi\", \"mdi-minus\"], [\"type\", \"number\", \"name\", \"progreso\", \"placeholder\", \"Product name\", \"aria-label\", \"Product name\", \"min\", \"1\", \"max\", \"100\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"txtProgress\", \"\"], [1, \"mdi\", \"mdi-plus\"]],\n    template: function IncrementadorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelementStart(3, \"span\", 1);\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function IncrementadorComponent_Template_button_click_4_listener() {\n          return ctx.cambiarValor(-5);\n        });\n        i0.ɵɵelement(5, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function IncrementadorComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.progreso = $event;\n        })(\"ngModelChange\", function IncrementadorComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\", 1);\n        i0.ɵɵelementStart(9, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function IncrementadorComponent_Template_button_click_9_listener() {\n          return ctx.cambiarValor(+5);\n        });\n        i0.ɵɵelement(10, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\" \", ctx.leyenda, \" \", ctx.progreso, \"\\n\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.progreso);\n      }\n    },\n    directives: [i1.MinValidator, i1.MaxValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return IncrementadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}