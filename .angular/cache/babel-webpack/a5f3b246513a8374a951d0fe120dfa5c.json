{"ast":null,"code":"var numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+-./:]+';\nvar kanji = '(?:[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|' + '[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B|' + '[\\u2010\\u2015\\u2018\\u2019\\u2025\\u2026\\u201C\\u201D\\u2225\\u2260]|' + '[\\u0391-\\u0451]|[\\u00A7\\u00A8\\u00B1\\u00B4\\u00D7\\u00F7])+';\nvar byte = '(?:(?![A-Z0-9 $%*+-./:]|' + kanji + ').)+';\nexports.KANJI = new RegExp(kanji, 'g');\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+-./:]+', 'g');\nexports.BYTE = new RegExp(byte, 'g');\nexports.NUMERIC = new RegExp(numeric, 'g');\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+-./:]+$');\n\nexports.testKanji = function testKanji(str) {\n  return TEST_KANJI.test(str);\n};\n\nexports.testNumeric = function testNumeric(str) {\n  return TEST_NUMERIC.test(str);\n};\n\nexports.testAlphanumeric = function testAlphanumeric(str) {\n  return TEST_ALPHANUMERIC.test(str);\n};","map":null,"metadata":{},"sourceType":"script"}