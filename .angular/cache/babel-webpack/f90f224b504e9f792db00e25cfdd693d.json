{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { URL_SERVICIOS } from '../../config/config'; // import map\n\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../usuario/usuario.service\";\nimport * as i3 from \"../subir-archivo/subir-archivo.service\";\nexport let HospitalService = /*#__PURE__*/(() => {\n  class HospitalService {\n    constructor(http, _usuarioService, _subirArchivoService) {\n      this.http = http;\n      this._usuarioService = _usuarioService;\n      this._subirArchivoService = _subirArchivoService;\n      this.totalHospitales = 0;\n    }\n\n    cambiarImagen(archivo, id) {\n      this._subirArchivoService.subirArchivo(archivo, 'hospitales', id).then(resp => {\n        this.hospital.img = resp.hospital.img;\n        Swal.fire('Imagen Actualizada', this.hospital.nombre, 'success');\n        this.guardarStorage(this.hospital);\n      }).catch(resp => {\n        console.log(resp);\n      });\n    }\n\n    cargarHospitales(desde = 0) {\n      const url = URL_SERVICIOS + '/hospital?desde=' + desde;\n      return this.http.get(url).pipe(map(resp => {\n        this.totalHospitales = resp.total;\n        return resp.hospitales;\n      }));\n    }\n\n    guardarStorage(hospital) {\n      localStorage.setItem('hospital', JSON.stringify(hospital));\n      this.hospital = hospital;\n    }\n\n    obtenerHospitales(id) {\n      const url = URL_SERVICIOS + '/hospital/' + id;\n      return this.http.get(url).pipe(map(resp => resp.hospital));\n    }\n\n    actualizarHospital(hospital) {\n      let url = URL_SERVICIOS + '/hospital/' + hospital._id;\n      url += '?token=' + this._usuarioService.token;\n      return this.http.put(url, hospital).pipe(map(resp => {\n        const hospitalDB = resp.hospital;\n        this.guardarStorage(hospitalDB);\n        Swal.fire('Hospital actualizado', hospital.nombre, 'success');\n        return true;\n      }));\n    }\n\n    buscarHospitales(termino) {\n      const url = URL_SERVICIOS + '/busqueda/coleccion/hospitales/' + termino;\n      return this.http.get(url).pipe(map(resp => resp.hospitales));\n    }\n\n    crearHospitales(nombre) {\n      const url = URL_SERVICIOS + '/hospital?token=' + this._usuarioService.token;\n      return this.http.post(url, {\n        nombre\n      }).pipe(map(resp => resp.hospital));\n    }\n\n    borrarHospitales(id) {\n      const url = URL_SERVICIOS + '/hospital/' + id + '?token=' + this._usuarioService.token;\n      return this.http.delete(url).pipe(map(resp => {\n        Swal.fire('Hospital borrado', 'Hospital borrado correctamente', 'success');\n        return true;\n      }));\n    }\n\n  }\n\n  HospitalService.ɵfac = function HospitalService_Factory(t) {\n    return new (t || HospitalService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UsuarioService), i0.ɵɵinject(i3.SubirArchivoService));\n  };\n\n  HospitalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HospitalService,\n    factory: HospitalService.ɵfac,\n    providedIn: 'root'\n  });\n  return HospitalService;\n})();","map":null,"metadata":{},"sourceType":"module"}