{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let RxjsComponent = /*#__PURE__*/(() => {\n  class RxjsComponent {\n    constructor() {\n      this.suscription = this.regresarObservable().subscribe(numero => console.log('Subscribe ', numero), error => console.error('Error en el obs', error), () => console.log('El observador Termino!'));\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      console.log('La Página se va a cerrar');\n      this.suscription.unsubscribe();\n    }\n\n    regresarObservable() {\n      return new Observable(observer => {\n        let contador = 0;\n        const intervalo = setInterval(() => {\n          contador++;\n          const salida = {\n            valor: contador\n          };\n          observer.next(salida); // if (contador === 3) {\n          // clearInterval( intervalo );\n          // observer.complete();\n          // }\n          // if ( contador === 2) {\n          //   // clearInterval( intervalo );\n          //   observer.error('Axilio');\n          // }\n        }, 1000);\n      }).pipe(map(resp => resp.valor), filter((valor, index) => {\n        if (valor % 2 === 1) {\n          // inpar\n          return true;\n        } else {\n          // par\n          return false;\n        }\n      }));\n    }\n\n  }\n\n  RxjsComponent.ɵfac = function RxjsComponent_Factory(t) {\n    return new (t || RxjsComponent)();\n  };\n\n  RxjsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RxjsComponent,\n    selectors: [[\"app-rxjs\"]],\n    decls: 2,\n    vars: 0,\n    template: function RxjsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"rxjs works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return RxjsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}